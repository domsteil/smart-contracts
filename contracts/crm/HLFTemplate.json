{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS Blockchain Template for Hyperledger Fabric. This template creates a Hyperledger Fabric network on an Amazon EC2 instance. It also includes the Hyperledger Explorer service. License: Apache 2.0 (Please do not remove) Apr 4, 2018 (bt-k5nffx4jb)",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Hyperledger Fabric Parameters"
          },
          "Parameters": [
            "ChannelName",
            "RootDomain",
            "Org1SubDomain",
            "Org2SubDomain",
            "Org3SubDomain"
          ]
        },
        {
          "Label": {
            "default": "VPC Network Configuration"
          },
          "Parameters": [
            "VPCID",
            "NetworkSubnetID"
          ]
        },
        {
          "Label": {
            "default": "Security Configuration"
          },
          "Parameters": [
            "EC2KeyPairName",
            "EC2SecurityGroup",
            "EC2InstanceProfileArn"
          ]
        }
      ],
      "ParameterLabels": {
        "NetworkSubnetID": {
          "default": "VPC Subnet to Use"
        },
        "EC2InstanceProfileArn": {
          "default": "EC2 Instance Profile ARN"
        },
        "EC2KeyPairName": {
          "default": "EC2 Key Pair"
        },
        "EC2SecurityGroup": {
          "default": "EC2 Security Group"
        },
        "EC2InstanceType": {
          "default": "Platform EC2 Instance Type"
        },
        "VPCID": {
          "default": "VPC ID"
        },
        "ChannelName": {
          "default": "Fabric Channel Name"
        },
        "RootDomain": {
          "default": "Domain"
        },
        "Org1SubDomain": {
          "default": "Peer Organization 1 Domain"
        },
        "Org2SubDomain": {
          "default": "Peer Organization 2 Domain"
        },
        "Org3SubDomain": {
          "default": "Peer Organization 3 Domain"
        }
      }
    }
  },
  "Parameters": {
    "ChannelName": {
      "Type": "String",
      "Description": "Channel name within the Fabric network. All organizations will be part of this channel.",
      "AllowedPattern": "[a-zA-Z]+[0-9a-zA-Z]*",
      "MinLength": 4,
      "MaxLength": 16,
      "ConstraintDescription": "Must be alphanumeric and start with a character and be between 4 and 16 characters.",
      "Default": "mychannel"
    },
    "RootDomain": {
      "Type": "String",
      "Description": "Root Domain Name within the Fabric Network. All organizations will be part of this domain.",
      "MinLength": 4,
      "MaxLength": 16,
      "AllowedPattern": "[a-z]+[0-9a-z.]*[a-z]+",
      "ConstraintDescription": "Must be alphanumeric, lower case and start with a character and be between 4 and 16 characters.",
      "Default": "example.com"
    },
    "Org1SubDomain": {
      "Type": "String",
      "Description": "Name of sub domain for the first organization. Must start with 'org', be alphanumeric, lower case, start with a character and be between 4 and 16 characters.",
      "MinLength": 4,
      "MaxLength": 16,
      "AllowedPattern": "org[0-9a-z]+",
      "ConstraintDescription": "Must start with 'org', be alphanumeric, lower case and start with a character and be between 4 and 16 characters.",
      "Default": "org1"
    },
    "Org2SubDomain": {
      "Type": "String",
      "Description": "Name of sub domain for the first organization. Must start with 'org', be alphanumeric, lower case, start with a character and be between 4 and 16 characters.",
      "MinLength": 4,
      "MaxLength": 16,
      "AllowedPattern": "[a-z]+[0-9a-z]*",
      "ConstraintDescription": "Must start with 'org', be alphanumeric, lower case and start with a character and be between 4 and 16 characters.",
      "Default": "org2"
    },
    "Org3SubDomain": {
      "Type": "String",
      "Description": "Name of sub domain for the first organization. Must start with 'org', be alphanumeric, lower case, start with a character and be between 4 and 16 characters.",
      "MinLength": 4,
      "MaxLength": 16,
      "AllowedPattern": "[a-z]+[0-9a-z]*",
      "ConstraintDescription": "Must start with 'org', be alphanumeric, lower case and start with a character and be between 4 and 16 characters.",
      "Default": "org3"
    },
    "VPCID": {
      "Description": "The ID of the VPC into which to launch the stack resources.",
      "Type": "AWS::EC2::VPC::Id"
    },
    "NetworkSubnetID": {
      "Description": "Subnet to launch the Fabric network in. This can be either a public or private subnet.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "EC2InstanceProfileArn": {
      "Type": "String",
      "Description": "The ARN of the role to associate with Amazon EC2 instances in the stack. The role must have permissions to write to read and write to the S3 bucket provided for artifacts above."
    },
    "EC2KeyPairName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "The name of an existing EC2 key pair to enable access to Amazon EC2 instances in the stack. and cluster nodes."
    },
    "EC2SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup::Id",
      "Description": "The name of an existing security group to assign to EC2 instances in the stack."
    },
    "EC2InstanceType": {
      "Description": "EC2 instance type",
      "Type": "String",
      "Default": "t2.medium",
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "t2.xlarge",
        "t2.2xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "r4.large",
        "r4.xlarge",
        "r4.2xlarge",
        "r4.4xlarge",
        "r4.8xlarge",
        "r4.16xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c5.large",
        "c5.xlarge",
        "c5.2xlarge",
        "c5.4xlarge",
        "c5.9xlarge",
        "c5.18xlarge"
      ],
      "ConstraintDescription": "Please choose a valid instance type."
    },
    "TemplateVersion": {
      "Type": "String",
      "AllowedValues": [
        "v1",
        "latest"
      ],
      "Default": "latest",
      "Description": "The Amazon S3 key prefix in the bucket for where the nested CloudFormation templates occur. This is available for versioning."
    }
  },
  "Mappings": {
    "RegionToResourceRegion": {
      "us-east-1": {
        "to": "us-east-1"
      },
      "us-east-2": {
        "to": "us-east-2"
      },
      "us-west-2": {
        "to": "us-west-2"
      },
      "us-west-1": {
        "to": "us-west-2"
      },
      "ca-central-1": {
        "to": "us-east-1"
      },
      "eu-central-1": {
        "to": "us-east-1"
      },
      "eu-west-1": {
        "to": "us-east-1"
      },
      "eu-west-2": {
        "to": "us-east-1"
      },
      "eu-west-3": {
        "to": "us-east-1"
      },
      "ap-northeast-2": {
        "to": "us-east-1"
      },
      "ap-northeast-1": {
        "to": "us-east-1"
      },
      "ap-southeast-2": {
        "to": "us-east-1"
      },
      "ap-southeast-1": {
        "to": "us-east-1"
      },
      "sa-east-1": {
        "to": "us-east-1"
      },
      "ap-south-1": {
        "to": "us-east-1"
      }
    },
    "RegionInformationMap": {
      "us-east-1": {
        "ResourceAccountId": 354658284331
      },
      "us-east-2": {
        "ResourceAccountId": 763976151875
      },
      "us-west-2": {
        "ResourceAccountId": 712425161857
      }
    }
  },
  "Resources": {
   "Type" : "AWS::ElasticBeanstalk::Application",
   "Properties" : {
      "ApplicationName" : "dappscape-nodeserver",
      "Description" : "DappScape CRM Blockchain Network REST Server",
      "ResourceLifecycleConfig" : "ApplicationResourceLifecycleConfig"

   },
    "FabricEC2CommonStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": [
            "https://aws-blockchain-templates-${TemplateRegion}.s3.${TemplateRegion}.amazonaws.com/hyperledger/fabric/templates/simplenetwork/${TemplateVersion}/templates/hyperledger-ec2-standalone.template.yaml",
            {
              "TemplateRegion": {
                "Fn::FindInMap": [
                  "RegionToResourceRegion",
                  {
                    "Ref": "AWS::Region"
                  },
                  "to"
                ]
              }
            }
          ]
        },
        "Parameters": {
          "ChannelName": {
            "Ref": "ChannelName"
          },
          "RootDomain": {
            "Ref": "RootDomain"
          },
          "Org1SubDomain": {
            "Ref": "Org1SubDomain"
          },
          "Org2SubDomain": {
            "Ref": "Org2SubDomain"
          },
          "Org3SubDomain": {
            "Ref": "Org3SubDomain"
          },
          "NetworkSubnetID": {
            "Ref": "NetworkSubnetID"
          },
          "EC2InstanceProfileArn": {
            "Ref": "EC2InstanceProfileArn"
          },
          "EC2KeyPairName": {
            "Ref": "EC2KeyPairName"
          },
          "EC2SecurityGroup": {
            "Ref": "EC2SecurityGroup"
          },
          "EC2InstanceType": {
            "Ref": "EC2InstanceType"
          },
          "DockerReleaseTag": "1.1.0",
          "DockerImageRepositoryURL": {
            "Fn::Sub": [
              "${DockerECRAccount}.dkr.ecr.${DockerRegion}.amazonaws.com/",
              {
                "DockerRegion": {
                  "Fn::FindInMap": [
                    "RegionToResourceRegion",
                    {
                      "Ref": "AWS::Region"
                    },
                    "to"
                  ]
                },
                "DockerECRAccount": {
                  "Fn::FindInMap": [
                    "RegionInformationMap",
                    {
                      "Fn::FindInMap": [
                        "RegionToResourceRegion",
                        {
                          "Ref": "AWS::Region"
                        },
                        "to"
                      ]
                    },
                    "ResourceAccountId"
                  ]
                }
              }
            ]
          },
          "LogLevel": "info",
          "NestedTemplateOrigin": {
            "Fn::Sub": [
              "https://aws-blockchain-templates-${TemplateRegion}.s3.${TemplateRegion}.amazonaws.com/hyperledger/fabric/templates/simplenetwork/${TemplateVersion}/",
              {
                "TemplateRegion": {
                  "Fn::FindInMap": [
                    "RegionToResourceRegion",
                    {
                      "Ref": "AWS::Region"
                    },
                    "to"
                  ]
                }
              }
            ]
          }
        }
      }
    }
  },
  "Outputs": {
    "ExplorerURL": {
      "Description": "Visit this URL to see the status of your Hyperledger Fabric network",
      "Value": {
        "Fn::GetAtt": [
          "FabricEC2CommonStack",
          "Outputs.ExplorerURL"
        ]
      }
    },
    "DevDesktopInstanceId": {
      "Description": "EC2 Instance ID",
      "Value": {
        "Fn::GetAtt": [
          "FabricEC2CommonStack",
          "Outputs.DevDesktopInstanceId"
        ]
      }
    },
    "DevDesktopInstancePrivateDnsName": {
      "Description": "EC2 Instance Private DNS",
      "Value": {
        "Fn::GetAtt": [
          "FabricEC2CommonStack",
          "Outputs.DevDesktopInstancePrivateDnsName"
        ]
      }
    },
    "DevDesktopInstancePublicDnsName": {
      "Description": "EC2 Instance Public DNS",
      "Value": {
        "Fn::GetAtt": [
          "FabricEC2CommonStack",
          "Outputs.DevDesktopInstancePublicDnsName"
        ]
      }
    }
  }
}